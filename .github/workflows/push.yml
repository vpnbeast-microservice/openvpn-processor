---

name: CI
on:
  push:
    branches:
      - master

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.x
      - name: Lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.26.0
          make lint

  vet:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.x
      - name: Vet
        run: make vet

  ineffassign:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.x
      - name: Lint
        run: make ineffassign

  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.x
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Test
        env:
          ACTIVE_PROFILE: unit-test
        run: make test

  build:
    needs:
      - lint
      - vet
      - ineffassign
      - test
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.x
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Test
        run: make build

  dockerize_and_commit:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Format
        run: make fmt
      - name: Set tag.sh executable
        run: chmod +x ci-scripts/tag.sh
      - name: Run tag.sh
        run: /bin/bash ci-scripts/tag.sh
      - name: Set release_version variable
        run: echo "release_version=$(grep RELEASE_VERSION version.properties | cut -d '=' -f2)" >> $GITHUB_ENV
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag vpnbeast/openvpn-processor:${{ env.release_version }}
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: vpnbeast/openvpn-processor
          tags: "latest,${{ env.release_version }}"
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Set commit.sh executable
        run: chmod +x ci-scripts/commit.sh
      - name: Run commit.sh
        run: /bin/bash ci-scripts/commit.sh ${{ secrets.GITHUB_TOKEN }} ${{ env.release_version }}
